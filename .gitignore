# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib60/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Environments (MUITO IMPORTANTE!)
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# IDE / Editor specific
.idea/          # Para PyCharm, IntelliJ IDEA
.vscode/        # Para Visual Studio Code (exceto se você quiser compartilhar configurações de launch/tasks)
*.suo
*.ntvs*
*.njsproj
*.sln
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store       # macOS
Thumbs.db       # Windows
ehthumbs.db     # Windows
Desktop.ini     # Windows

# Logs
*.log
logs/

# Arquivos de configuração local ou sensíveis (MUITO IMPORTANTE!)
# Se sua pasta 'config' contiver segredos, ignore os arquivos específicos
# e forneça um template. Exemplo:
# config/secrets.ini
# config/api_keys.json
# É MELHOR IGNORAR A PASTA TODA SE ELA SÓ TEM ARQUIVOS LOCAIS
# config/local_settings.py

# Dados (MUITO IMPORTANTE!)
# Se a pasta 'data' contiver dados gerados localmente, grandes bancos de dados
# ou dados sensíveis que não devem ir para o repositório:
# data/*.db
# data/*.sqlite
# data/large_dataset.csv
# data/user_specific_data/
# Se a pasta 'data' inteira for de dados temporários ou locais:
# data/

# Pasta 'tests' - Geralmente NÃO se ignora a pasta de testes inteira.
# Mas pode-se ignorar caches ou relatórios gerados pelos testes.
# tests/__pycache__/
# tests/.pytest_cache/

# Arquivos temporários
*.tmp
*~